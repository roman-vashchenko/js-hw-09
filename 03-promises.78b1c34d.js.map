{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,I,CAXMO,SAASC,cAAc,QAe/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACNX,MAAQU,EAAME,OAAOZ,MAAMa,MAC3BC,KAAOJ,EAAME,OAAOE,KAAKD,MACzBE,OAASL,EAAME,OAAOG,OAAOF,MAC7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,OAAQC,GAAK,EAChClB,EAAckB,EAAGhB,OACdiB,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAsB,OAAOC,QAAQ,qBAAqBpB,QAAeC,MAAU,IAE9DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAsB,OAAOG,QAAQ,oBAAoBtB,QAAeC,MAAU,IAGhEc,MAAQA,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  );\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  delay = event.target.delay.value;\n  step = event.target.step.value;\n  amount = event.target.amount.value;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    step += step;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","target","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.78b1c34d.js.map"}